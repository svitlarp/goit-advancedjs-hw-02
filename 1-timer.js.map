{"version":3,"file":"1-timer.js","sources":["../src/js/convertMs.js","../src/js/1-timer.js"],"sourcesContent":["export function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n    \n    return { days, hours, minutes, seconds };\n  }\n  \n  \n  ","import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { convertMs } from \"./convertMs\";\n\nconst refs = {\n    inputEl: document.querySelector('#datetime-picker'),\n    timerEL: document.querySelector('.timer'),\n    buttonStartEl: document.querySelector('[data-start]'),\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]'),\n}\n\n// 1 Create flatpickr instance.\n\nlet userSelectedDate = \"\";\nlet dateNow = new Date();\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        console.log(selectedDates);\n        console.log(selectedDates[0]);\n        userSelectedDate = selectedDates[0];\n        console.log('userSelectedDate:', userSelectedDate);\n\n        console.log('dateNow: ', dateNow);\n\n        // Handle User Date to check that choosen date will be greater then now.\n        if (userSelectedDate.getTime() < dateNow.getTime()) {\n            window.alert(\"Please choose a date in the future\")\n        }\n    },\n};\n\n\nconst fp = flatpickr(\"#datetime-picker\", options);\nconsole.log(fp);\nconsole.dir(fp);\n\n\n// Find how many seconds left for some date\nconst secondsLeft = () => {\n    const dateNow = new Date();\n    console.log(dateNow);\n    const userDate = fp.selectedDates[0];\n    const ms = userDate.getTime() - dateNow.getTime();\n    const timeLeft = convertMs(ms);\n    console.log(timeLeft);\n    return timeLeft;\n} \n\n\nlet intervalID = null;\n\nrefs.buttonStartEl.addEventListener(\"click\", () => {\n    console.log('click Button');\n    const res = secondsLeft();\n    if (res !== 0) {\n        // TODO: ??? Input and start button became inactive\n        // refs.inputEl.is-active;\n        // refs.buttonStartEl.is-inactive;\n        intervalID = setInterval(() => {\n            secondsLeft();\n        }, 1000);\n    } else {\n        clearInterval(intervalID);\n    }\n});\n\n// TODO: використовує метод рядка padStart() і перед відмальовуванням інтерфейсу форматує значення.\nfunction addLeadingZero({days, hours, minutes, seconds}) {\n    if (days <= 9 || hours <= 9|| minutes <= 9|| seconds<= 9) {\n        refs.days.innerHTML = value.padStart(1, \"0\");\n        refs.hours.innerHTML = value.padStart(1, \"0\");\n        refs.minutes.innerHTML = value.padStart(1, \"0\");\n        refs.seconds.innerHTML = value.padStart(1, \"0\");\n    } \n}\n\n\n\n\n\n\n\n\n\n"],"names":["convertMs","ms","days","hours","minutes","seconds","refs","userSelectedDate","dateNow","options","selectedDates","fp","flatpickr","secondsLeft","timeLeft","intervalID"],"mappings":"mIAAO,SAASA,EAAUC,EAAI,CAQ1B,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC5C,CCbA,MAAMC,EAAO,CACT,QAAS,SAAS,cAAc,kBAAkB,EAClD,QAAS,SAAS,cAAc,QAAQ,EACxC,cAAe,SAAS,cAAc,cAAc,EACpD,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACpD,EAIA,IAAIC,EAAmB,GACnBC,EAAU,IAAI,KAElB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,QAAQ,IAAIA,CAAa,EACzB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BH,EAAmBG,EAAc,CAAC,EAClC,QAAQ,IAAI,oBAAqBH,CAAgB,EAEjD,QAAQ,IAAI,YAAaC,CAAO,EAG5BD,EAAiB,QAAO,EAAKC,EAAQ,QAAO,GAC5C,OAAO,MAAM,oCAAoC,CAExD,CACL,EAGMG,EAAKC,EAAU,mBAAoBH,CAAO,EAChD,QAAQ,IAAIE,CAAE,EACd,QAAQ,IAAIA,CAAE,EAId,MAAME,EAAc,IAAM,CACtB,MAAML,EAAU,IAAI,KACpB,QAAQ,IAAIA,CAAO,EAEnB,MAAMP,EADWU,EAAG,cAAc,CAAC,EACf,QAAO,EAAKH,EAAQ,QAAS,EAC3CM,EAAWd,EAAUC,CAAE,EAC7B,eAAQ,IAAIa,CAAQ,EACbA,CACX,EAGA,IAAIC,EAAa,KAEjBT,EAAK,cAAc,iBAAiB,QAAS,IAAM,CAC/C,QAAQ,IAAI,cAAc,EACdO,EAAa,IACb,EAIRE,EAAa,YAAY,IAAM,CAC3BF,EAAa,CAChB,EAAE,GAAI,EAEP,cAAcE,CAAU,CAEhC,CAAC"}